service: aws-nestjs-zipbak

provider:
  name: aws
  runtime: nodejs14.x
  memorySize: 256
  timeout: 6
  logRetentionInDays: 7
  profile: rokhun
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'ap-northeast-2'}
  environment:
    SERVICE: ${self:service}
    STAGE: ${self:provider.stage}
    REGION: ${self:provider.region}
    NO_COLOR: ${env:NO_COLOR, 'true'}
  apiGateway:
    metrics: ${self:custom.metrics.${opt:stage, 'dev'}, 'false'}
    shouldStartNameWithService: true
  vpc:
    securityGroupIds:
      - sg-0485cd62e49546027
    subnetIds:
      - subnet-061e7d6e7c1fe71a8
      - subnet-061e93c93cd4c3749
      - subnet-01bfef7fd4d70eb73
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: arn:aws:dynamodb:${self:provider.region}:*:*

plugins:
  - serverless-plugin-typescript
  - serverless-dynamodb-local
  - serverless-offline

# remove the unnecessary packages to keep small upload size
package:
  exclude:
    - node_modules/typescript/**
    - node_modules/@types/**

custom:
  metrics:
    dev: false
    prod: true
  dynamodb:
    stages:
      - ${self:provider.stage}
    start:
      port: 8000
      inMemory: true
      migrate: true
      seed: false

functions:
  index-function:
    handler: src/index.handler
    events:
      - http:
          cors: true
          path: '{proxy+}'
          method: any

resources:
  - ${file(resource/dynamodb.yml)}
